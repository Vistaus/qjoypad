#############################################################################
# Makefile for building: qjoypad
# Generated by qmake (1.07a) (Qt 3.3.2) on: Mon Aug 16 09:42:56 2004
# Project:  qjoypad.pro
# Template: app
# Command: $(QMAKE) "DEVDIR=/dev/input" "PREFIX=/usr" "DEFINES += " -o Makefile qjoypad.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2  -DDEVDIR='"/dev/input"' -DICON24='"/usr/share/pixmaps/qjoypad/icon24.png"' -DICON64='"/usr/share/pixmaps/qjoypad/icon64.png"' -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2  -DDEVDIR='"/dev/input"' -DICON24='"/usr/share/pixmaps/qjoypad/icon24.png"' -DICON64='"/usr/share/pixmaps/qjoypad/icon64.png"' -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt/mkspecs/default -I. -I. -Itrayicon -I$(QTDIR)/include
LINK     = g++
LFLAGS   =  -Wl,-rpath,$(QTDIR)/lib
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lXtst -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = axis.h \
		axis_edit.h \
		axisw.h \
		button.h \
		button_edit.h \
		buttonw.h \
		component.h \
		constant.h \
		device.h \
		error.h \
		event.h \
		flash.h \
		icon.h \
		joypad.h \
		joypadw.h \
		joyslider.h \
		keycode.h \
		layout.h \
		layout_edit.h \
		loop.h \
		quickset.h \
		timer.h \
		trayicon/trayicon.h
SOURCES = axis.cpp \
		axis_edit.cpp \
		axisw.cpp \
		button.cpp \
		button_edit.cpp \
		buttonw.cpp \
		event.cpp \
		flash.cpp \
		icon.cpp \
		joypad.cpp \
		joypadw.cpp \
		joyslider.cpp \
		keycode.cpp \
		layout.cpp \
		layout_edit.cpp \
		loop.cpp \
		main.cpp \
		quickset.cpp \
		trayicon/trayicon.cpp \
		trayicon/trayicon_x11.cpp
OBJECTS = axis.o \
		axis_edit.o \
		axisw.o \
		button.o \
		button_edit.o \
		buttonw.o \
		event.o \
		flash.o \
		icon.o \
		joypad.o \
		joypadw.o \
		joyslider.o \
		keycode.o \
		layout.o \
		layout_edit.o \
		loop.o \
		main.o \
		quickset.o \
		trayicon.o \
		trayicon_x11.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_axis_edit.cpp \
		moc_button_edit.cpp \
		moc_flash.cpp \
		moc_icon.cpp \
		moc_joypadw.cpp \
		moc_keycode.cpp \
		moc_layout.cpp \
		trayicon/moc_trayicon.cpp
OBJMOC = moc_axis_edit.o \
		moc_button_edit.o \
		moc_flash.o \
		moc_icon.o \
		moc_joypadw.o \
		moc_keycode.o \
		moc_layout.o \
		moc_trayicon.o
DIST	   = qjoypad.pro
QMAKE_TARGET = qjoypad
DESTDIR  = 
TARGET   = qjoypad

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: qjoypad.pro  /usr/lib/qt/mkspecs/default/qmake.conf /usr/lib/qt/lib/libqt-mt.prl
	$(QMAKE) "DEVDIR=/dev/input" "PREFIX=/usr" "DEFINES += " -o Makefile qjoypad.pro
qmake: 
	@$(QMAKE) "DEVDIR=/dev/input" "PREFIX=/usr" "DEFINES += " -o Makefile qjoypad.pro

dist: 
	@mkdir -p .tmp/qjoypad && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/qjoypad/ && ( cd `dirname .tmp/qjoypad` && $(TAR) qjoypad.tar qjoypad && $(GZIP) qjoypad.tar ) && $(MOVE) `dirname .tmp/qjoypad`/qjoypad.tar.gz . && $(DEL_FILE) -r .tmp/qjoypad

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

axis.o: axis.cpp axis.h \
		component.h \
		timer.h \
		event.h \
		constant.h

axis_edit.o: axis_edit.cpp axis_edit.h \
		joyslider.h \
		keycode.h \
		axis.h \
		constant.h \
		component.h \
		timer.h \
		event.h

axisw.o: axisw.cpp axisw.h \
		axis.h \
		axis_edit.h \
		flash.h \
		component.h \
		timer.h \
		event.h \
		constant.h \
		joyslider.h \
		keycode.h

button.o: button.cpp button.h \
		component.h \
		timer.h \
		keycode.h \
		event.h \
		constant.h

button_edit.o: button_edit.cpp button_edit.h \
		button.h \
		keycode.h \
		component.h \
		timer.h \
		event.h \
		constant.h

buttonw.o: buttonw.cpp buttonw.h \
		button.h \
		button_edit.h \
		flash.h \
		component.h \
		timer.h \
		keycode.h \
		event.h \
		constant.h

event.o: event.cpp event.h

flash.o: flash.cpp flash.h

icon.o: icon.cpp icon.h \
		constant.h

joypad.o: joypad.cpp joypad.h \
		button.h \
		axis.h \
		joypadw.h \
		error.h \
		component.h \
		timer.h \
		keycode.h \
		event.h \
		constant.h \
		axisw.h \
		buttonw.h \
		quickset.h \
		axis_edit.h \
		flash.h \
		joyslider.h \
		button_edit.h

joypadw.o: joypadw.cpp joypadw.h \
		joypad.h \
		axisw.h \
		buttonw.h \
		quickset.h \
		button.h \
		axis.h \
		error.h \
		component.h \
		timer.h \
		keycode.h \
		event.h \
		constant.h \
		axis_edit.h \
		flash.h \
		joyslider.h \
		button_edit.h

joyslider.o: joyslider.cpp joyslider.h \
		constant.h

keycode.o: keycode.cpp keycode.h \
		constant.h

layout.o: layout.cpp layout.h \
		joypad.h \
		error.h \
		device.h \
		trayicon/trayicon.h \
		icon.h \
		layout_edit.h \
		button.h \
		axis.h \
		joypadw.h \
		component.h \
		timer.h \
		keycode.h \
		event.h \
		constant.h \
		axisw.h \
		buttonw.h \
		quickset.h \
		axis_edit.h \
		flash.h \
		joyslider.h \
		button_edit.h

layout_edit.o: layout_edit.cpp layout_edit.h \
		flash.h \
		layout.h \
		device.h \
		joypadw.h \
		joypad.h \
		error.h \
		trayicon/trayicon.h \
		icon.h \
		button.h \
		axis.h \
		component.h \
		timer.h \
		keycode.h \
		event.h \
		constant.h \
		axisw.h \
		buttonw.h \
		quickset.h \
		axis_edit.h \
		joyslider.h \
		button_edit.h

loop.o: loop.cpp loop.h \
		joypad.h \
		device.h \
		button.h \
		axis.h \
		joypadw.h \
		error.h \
		component.h \
		timer.h \
		keycode.h \
		event.h \
		constant.h \
		axisw.h \
		buttonw.h \
		quickset.h \
		axis_edit.h \
		flash.h \
		joyslider.h \
		button_edit.h

main.o: main.cpp loop.h \
		layout.h \
		event.h \
		device.h \
		error.h \
		joypad.h \
		button.h \
		axis.h \
		joypadw.h \
		component.h \
		timer.h \
		keycode.h \
		constant.h \
		axisw.h \
		buttonw.h \
		quickset.h \
		axis_edit.h \
		flash.h \
		joyslider.h \
		button_edit.h \
		trayicon/trayicon.h \
		icon.h \
		layout_edit.h

quickset.o: quickset.cpp quickset.h \
		keycode.h \
		joypad.h \
		constant.h \
		button.h \
		axis.h \
		joypadw.h \
		error.h \
		component.h \
		timer.h \
		event.h \
		axisw.h \
		buttonw.h \
		axis_edit.h \
		flash.h \
		joyslider.h \
		button_edit.h

trayicon.o: trayicon/trayicon.cpp trayicon/trayicon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trayicon.o trayicon/trayicon.cpp

trayicon_x11.o: trayicon/trayicon_x11.cpp trayicon/trayicon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trayicon_x11.o trayicon/trayicon_x11.cpp

moc_axis_edit.o: moc_axis_edit.cpp  axis_edit.h joyslider.h \
		keycode.h \
		axis.h \
		constant.h \
		component.h \
		timer.h \
		event.h

moc_button_edit.o: moc_button_edit.cpp  button_edit.h button.h \
		keycode.h \
		component.h \
		timer.h \
		event.h \
		constant.h

moc_flash.o: moc_flash.cpp  flash.h 

moc_icon.o: moc_icon.cpp  icon.h constant.h

moc_joypadw.o: moc_joypadw.cpp  joypadw.h joypad.h \
		axisw.h \
		buttonw.h \
		quickset.h \
		button.h \
		axis.h \
		error.h \
		component.h \
		timer.h \
		keycode.h \
		event.h \
		constant.h \
		axis_edit.h \
		flash.h \
		joyslider.h \
		button_edit.h

moc_keycode.o: moc_keycode.cpp  keycode.h constant.h

moc_layout.o: moc_layout.cpp  layout.h joypad.h \
		error.h \
		device.h \
		trayicon/trayicon.h \
		icon.h \
		layout_edit.h \
		button.h \
		axis.h \
		joypadw.h \
		component.h \
		timer.h \
		keycode.h \
		event.h \
		constant.h \
		axisw.h \
		buttonw.h \
		quickset.h \
		axis_edit.h \
		flash.h \
		joyslider.h \
		button_edit.h

moc_trayicon.o: trayicon/moc_trayicon.cpp  trayicon/trayicon.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_trayicon.o trayicon/moc_trayicon.cpp

moc_axis_edit.cpp: $(MOC) axis_edit.h
	$(MOC) axis_edit.h -o moc_axis_edit.cpp

moc_button_edit.cpp: $(MOC) button_edit.h
	$(MOC) button_edit.h -o moc_button_edit.cpp

moc_flash.cpp: $(MOC) flash.h
	$(MOC) flash.h -o moc_flash.cpp

moc_icon.cpp: $(MOC) icon.h
	$(MOC) icon.h -o moc_icon.cpp

moc_joypadw.cpp: $(MOC) joypadw.h
	$(MOC) joypadw.h -o moc_joypadw.cpp

moc_keycode.cpp: $(MOC) keycode.h
	$(MOC) keycode.h -o moc_keycode.cpp

moc_layout.cpp: $(MOC) layout.h
	$(MOC) layout.h -o moc_layout.cpp

trayicon/moc_trayicon.cpp: $(MOC) trayicon/trayicon.h
	$(MOC) trayicon/trayicon.h -o trayicon/moc_trayicon.cpp

####### Install

install_target: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)/usr/bin/" || $(MKDIR) "$(INSTALL_ROOT)/usr/bin/"
	-$(INSTALL_FILE) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/usr/bin/$(QMAKE_TARGET)"
	-strip "$(INSTALL_ROOT)/usr/bin/$(QMAKE_TARGET)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) "$(INSTALL_ROOT)/usr/bin/"


install_icons: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)/usr/share/pixmaps/qjoypad/" || $(MKDIR) "$(INSTALL_ROOT)/usr/share/pixmaps/qjoypad/"
	cp ../icons/* /usr/share/pixmaps/qjoypad; cd /usr/share/pixmaps/qjoypad; ln -sf gamepad4-24x24.png icon24.png; ln -sf gamepad3-64x64.png icon64.png


install_doc: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)/usr/doc/qjoypad3/" || $(MKDIR) "$(INSTALL_ROOT)/usr/doc/qjoypad3/"
	cp ../README.txt ../LICENSE.txt /usr/doc/qjoypad3


install: install_target install_icons install_doc  

uninstall: uninstall_target  

